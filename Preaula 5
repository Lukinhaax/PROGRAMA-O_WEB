CURSO DE ENGENHARIA DE SOFTWARE - UNIEVANGELICA
DISCIPLINA DE PROGRAMAÇÃO WEB
DEV: LUCAS MORAES AGUIAR - 2012148
27/03/2023

PREAULA 05:

import React, { useState } from 'react';

function TicTacToe() {
  // define um array de 9 posições vazias para o tabuleiro do jogo da velha
  const [board, setBoard] = useState(Array(9).fill(null));
  // define o jogador atual como X
  const [player, setPlayer] = useState('X');

  // função que manipula uma jogada do jogador atual em uma posição específica do tabuleiro
  function handleSquareClick(index) {
    // verifica se a posição já foi preenchida
    if (board[index] === null) {
      // cria uma cópia do array do tabuleiro para poder modificá-lo
      const newBoard = [...board];
      // atribui a jogada do jogador atual na posição escolhida
      newBoard[index] = player;
      // atualiza o array do tabuleiro com a nova jogada
      setBoard(newBoard);
      // alterna o jogador atual entre X e O
      setPlayer(player === 'X' ? 'O' : 'X');
    }
  }

  // função que verifica se houve um vencedor após cada jogada
  function calculateWinner() {
    // define todas as combinações possíveis de vitória
    const lines = [
      [0, 1, 2],
      [3, 4, 5],
      [6, 7, 8],
      [0, 3, 6],
      [1, 4, 7],
      [2, 5, 8],
      [0, 4, 8],
      [2, 4, 6]
    ];

    // percorre todas as combinações possíveis de vitória
    for (let i = 0; i < lines.length; i++) {
      const [a, b, c] = lines[i];
      // verifica se todas as posições da combinação têm o mesmo valor (X ou O)
      if (board[a] && board[a] === board[b] && board[a] === board[c]) {
        // retorna o valor do jogador vencedor (X ou O)
        return board[a];
      }
    }

    // se nenhuma combinação de vitória for encontrada, retorna null
    return null;
  }

  // verifica se há um vencedor
  const winner = calculateWinner();

  // renderiza o tabuleiro do jogo da velha
  return (
    <div className="tic-tac-toe">
      <div className="board">
        {board.map((square, index) => (
          <div className="square" key={index} onClick={() => handleSquareClick(index)}>
            {square}
          </div>
        ))}
      </div>
      <div className="status">
        {winner ? `Vencedor: ${winner}` : `Jogador atual: ${player}`}
      </div>
    </div>
  );
}

export default TicTacToe;
